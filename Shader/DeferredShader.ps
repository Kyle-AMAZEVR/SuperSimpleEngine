

Texture2D shaderTexture : register(t0);

SamplerState SampleTypeWrap : register(s0);

struct PixelInputType
{
    float4 position : SV_POSITION;
    float3 normal : NORMAL;
    float2 tex : TEXCOORD0;
};


struct PixelOutputType
{
    float4 position: SV_Target0;
    float4 normal : SV_Target1;
    float4 tex : SV_Target2;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
PixelOutputType PSMain(PixelInputType input) 
{
    PixelOutputType output = (PixelOutputType)0;

    output.position = input.position;

    // Sample the color from the texture and store it for output to the render target.
    output.tex = float4(input.tex,0,1);
	
    // Store the normal for output to the render target.
    output.normal = float4(input.normal, 1.0f);

    return output;
}
